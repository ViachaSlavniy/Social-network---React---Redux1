{"version":3,"sources":["components/Profile/Profile.module.css","redux/dialogs-reducer.js","assets/images/preloader.svg","components/Profile/MyPosts/Post/Post.module.css","components/Nav/Nav.module.css","hoc/withAuthRedirect.jsx","components/Profile/ProfileInfo/ProfileInfo.module.css","components/Nav/SideBarFriends/SideBarFriends.jsx","components/Nav/SideBarFriends/SideBarFriendsContainer.jsx","components/Nav/Nav.jsx","components/Footer/Footer.jsx","components/News/News.jsx","components/Music/Music.jsx","components/Settings/Settings.jsx","api/api.js","redux/users-reducer.js","components/Common/Paginator/Paginator.jsx","components/Users/Users.jsx","components/Common/Preloader/Preloader.jsx","redux/users-selectors.js","components/Users/UsersContainer.jsx","components/Profile/ProfileInfo/ProfileStatusWithHooks.jsx","components/Profile/ProfileInfo/ProfileDataForm.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","redux/profile-reducer.js","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx","components/Header/Header.jsx","redux/auth-reducer.js","components/Header/HeaderContainer.jsx","components/Login/Login.jsx","components/Login/LoginContainer.jsx","redux/app-reducer.js","hoc/withSuspense.jsx","App.js","redux/sidebar-reducer.js","redux/redux-store.js","index.js","components/Common/FormControls/FormControls.module.css","components/Users/Users.module.css","redux/helpers/validators.js","components/Common/FormControls/FormControls.js","assets/images/unknown-user.png","components/Header/Header.module.css","components/Common/Paginator/Paginator.module.css","components/Profile/MyPosts/MyPosts.module.css","components/Nav/SideBarFriends/SideBarFriends.module.css"],"names":["module","exports","initialState","dialogsData","id","name","img","messagesData","message","addNewMessage","newMessageText","type","dialogsReducer","state","action","messageBody","newMessage","mapStateToProps","isAuth","auth","withAuthRedirectComponent","Component","RedirectComponent","this","props","to","React","connect","SideBarFriends","sideBarFriendsElements","friends","map","sdBarFr","key","className","s","userAva","src","someFriends","SideBarFriendsContainer","sidebar","Nav","nav","item","activeClassName","activeLink","Footer","News","Music","Settings","instance","axios","baseURL","withCredentials","headers","usersAPI","numberPage","pageSize","get","then","response","data","userId","post","delete","profileAPI","getProfile","getStatus","updateStatus","status","put","savePhoto","photo","formData","FormData","append","saveProfile","profile","authAPI","email","password","rememberMe","captcha","users","totalUsersCount","portionSize","currentPage","isFetching","isFollowingProgress","followSuccess","unfollowSuccess","setTotalUsersCount","totalCount","count","toggleIsFetching","toggleFollowingProgress","followingProgress","usersReducer","u","followed","filter","Paginator","pagesCount","Math","ceil","totalItemsCount","pages","i","push","portionCount","useState","portionNumber","setPortionNumber","leftPortionPageNumber","rightPortionPageNumber","pagination","onClick","p","onPageChanged","cn","selectedPage","paginationItem","Users","wrapper","userItem","avatar","photos","small","unknownUser","alt","disabled","some","unfollow","followBtn","follow","userInfo","Preloader","preloader","getUsersSuperSelector","createSelector","usersPage","getPageSize","getTotalUsersCount","getCurrentPage","getIsFetching","getIsFollowingProgress","UsersAPIComponent","pageNumber","setCurrentPage","requestUsers","UsersContainer","dispatch","a","items","resultCode","ProfileStatusWithHooks","editMode","setEditMode","userStatus","setStatus","useEffect","onDoubleClick","onChange","e","currentTarget","value","autoFocus","onBlur","ProfileDataReduxForm","reduxForm","form","onSubmit","handleSubmit","isOwner","error","Field","placeholder","component","Object","keys","contacts","ProfileData","activateEditMode","fullName","aboutMe","lookingForAJob","lookingForAJobDescription","contactTitle","contactValue","Contact","socialLink","ProfileInfo","backgroundPicture","userInfoWrapper","avatarWrapper","large","onSavePhoto","initialValues","postsData","likesCounts","setUserStatus","profileReducer","newPost","postText","newPostText","postId","Post","maxLength","maxLengthCreator","MyPostsReduxForm","Elem","validate","required","typeField","newPostBtn","MyPosts","postsElements","postsBlock","values","newPosts","MyPostsContainer","profilePage","newPostsActionCreator","Profile","ProfileContainer","target","files","length","updateProfilePhoto","match","params","authorizedUserId","history","getUserStatus","refreshProfile","prevProps","prevState","snapshot","updateUserStatus","undefined","compose","file","getState","messages","stopSubmit","_error","Promise","reject","withRouter","Header","header","loginBlock","login","logout","captchaUrl","setAuthUserData","getAuthUserData","authReducer","HeaderContainer","LoginReduxForm","borderError","Login","LoginContainer","url","initialized","appReducer","withSuspense","fallback","DialogsContainer","lazy","App","initializeApp","path","render","app","promise","all","sidebarReducer","stateCopy","reducers","combineReducers","messagesPage","formReducer","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","store","createStore","applyMiddleware","thunkMiddleWare","ReactDOM","StrictMode","document","getElementById","input","meta","touched","textArea"],"mappings":"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","file":"static/js/main.5399c061.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"Profile_content__XJG-Q\"};","const ADD_NEW_MESSAGE = 'ADD-NEW-MESSAGE';\r\n\r\nconst initialState = {\r\n    dialogsData: [\r\n        {id: 1, name: 'Dmitriy', img: 'https://html5css.ru/w3images/avatar2.png'},\r\n        {id: 2, name: 'Viacheslav', img: 'https://www.w3schools.com/howto/img_avatar.png'},\r\n        {id: 3, name: 'Anjela', img: 'https://html5css.ru/howto/img_avatar2.png'},\r\n        {id: 4, name: 'Svetlana', img: 'https://html5css.ru/w3images/avatar6.png'},\r\n        {\r\n            id: 5,\r\n            name: 'Sergey',\r\n            img: 'https://encrypted-tbn0.gstatic.com/images?q=tbn%3AANd9GcSeKZbcVtvtJKKvj5jnN11zgX82gll4TsnmFg&usqp=CAU'\r\n        }\r\n\r\n    ],\r\n    messagesData: [\r\n        {message: \"Hello!\", img: 'https://html5css.ru/w3images/avatar2.png'},\r\n        {message: \"How are you?\", img: 'https://www.w3schools.com/howto/img_avatar.png'},\r\n        {message: \"Let's go to train\", img: 'https://html5css.ru/howto/img_avatar2.png'},\r\n        {message: \"I'm fine\", img: 'https://html5css.ru/w3images/avatar6.png'},\r\n        {\r\n            message: \"UUUU ska\",\r\n            img: 'https://encrypted-tbn0.gstatic.com/images?q=tbn%3AANd9GcSeKZbcVtvtJKKvj5jnN11zgX82gll4TsnmFg&usqp=CAU'\r\n        }\r\n    ],\r\n}\r\n\r\nconst dialogsReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case ADD_NEW_MESSAGE: {\r\n            let messageBody = action.newMessageText;\r\n            let newMessage = {\r\n                message: messageBody,\r\n                img: 'https://html5css.ru/w3images/avatar2.png'\r\n            }\r\n            return {\r\n                ...state,\r\n                messagesData: [newMessage, ...state.messagesData],\r\n            };\r\n\r\n        }\r\n        default: {\r\n            return state;\r\n        }\r\n\r\n\r\n    }\r\n}\r\n\r\nexport let addNewMessage = (newMessageText) => ({type: ADD_NEW_MESSAGE, newMessageText});\r\n\r\n\r\nexport default dialogsReducer;","module.exports = __webpack_public_path__ + \"static/media/preloader.e1c23af8.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__3fTh5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Nav_nav__FI7sh\",\"item\":\"Nav_item__fAzAu\",\"activeLink\":\"Nav_activeLink__3PAa-\",\"someFriends\":\"Nav_someFriends__N9ZQm\"};","import React from \"react\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        isAuth: state.auth.isAuth\r\n    }\r\n}\r\n\r\nexport const withAuthRedirectComponent = (Component) => {\r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n            if(this.props.isAuth) { return <Component {...this.props}/>}\r\n            return <Redirect to={'/login'}/>\r\n        }\r\n    }\r\n\r\n    let ConnectedRedirectComponent = connect(mapStateToProps)(RedirectComponent)\r\n\r\n    return ConnectedRedirectComponent\r\n}\r\n\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"backgroundPicture\":\"ProfileInfo_backgroundPicture__2D4tn\",\"userInfoWrapper\":\"ProfileInfo_userInfoWrapper__1bf7I\",\"userInfo\":\"ProfileInfo_userInfo__1aEcQ\",\"avatarWrapper\":\"ProfileInfo_avatarWrapper__313v6\",\"avatar\":\"ProfileInfo_avatar__3i8o5\",\"socialLink\":\"ProfileInfo_socialLink__3n2hI\",\"error\":\"ProfileInfo_error__6fDzA\"};","import React from 'react';\r\nimport s from './SideBarFriends.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst SideBarFriends = (props) => {\r\n    let sideBarFriendsElements = props.friends.map(sdBarFr => (\r\n            <div key={sdBarFr.id}>\r\n                <NavLink to=\"/\"><img className={s.userAva} src={sdBarFr.img}/></NavLink>\r\n                <NavLink to=\"/\">{sdBarFr.name}</NavLink>\r\n            </div>)\r\n    )\r\n\r\n    return (\r\n        <div className={s.someFriends}>\r\n            {sideBarFriendsElements}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SideBarFriends;","import React from 'react';\r\nimport SideBarFriends from \"./SideBarFriends\";\r\nimport {connect} from \"react-redux\";\r\n\r\n// const SideBarFriendsContainer = (props) => {\r\n//     return <StoreContext>\r\n//         {(store) => {\r\n//             let state = store.getState();\r\n//             return <SideBarFriends friends={state.sidebar.friends}/>\r\n//             }\r\n//         }\r\n//     </StoreContext>\r\n// }\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        friends: state.sidebar.friends\r\n    }\r\n}\r\n\r\nlet mapDispatchToProps = () => {\r\n    return {\r\n\r\n    }\r\n}\r\n\r\nconst SideBarFriendsContainer = connect(mapStateToProps,mapDispatchToProps)(SideBarFriends)\r\n\r\nexport default SideBarFriendsContainer;","import React from 'react';\r\nimport s from './Nav.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\nimport SideBarFriendsContainer from \"./SideBarFriends/SideBarFriendsContainer\";\r\n\r\nconst Nav = (props) => {\r\n    return (\r\n        <nav className={s.nav}>\r\n            <div className={s.item}>\r\n                <NavLink to=\"/profile\" activeClassName={s.activeLink}>Profile</NavLink>\r\n            </div>\r\n            <div className={s.item}>\r\n                <NavLink to=\"/dialogs\" activeClassName={s.activeLink}>Messages</NavLink>\r\n            </div>\r\n            <div className={s.item}>\r\n                <NavLink to=\"/news\" activeClassName={s.activeLink}>News</NavLink>\r\n            </div>\r\n            <div className={s.item}>\r\n                <NavLink to=\"/music\" activeClassName={s.activeLink}>Music</NavLink>\r\n            </div>\r\n            <div className={s.item}>\r\n                <NavLink to=\"/settings\" activeClassName={s.activeLink}>Settings</NavLink>\r\n            </div>\r\n            <div className={s.item}>\r\n                <NavLink to=\"/users\" activeClassName={s.activeLink}>Users</NavLink>\r\n            </div>\r\n            <div className={s.item}>\r\n                <NavLink to=\"/friends\" activeClassName={s.activeLink}>Friends</NavLink>\r\n                <SideBarFriendsContainer/>\r\n            </div>\r\n        </nav>\r\n    )\r\n}\r\n\r\nexport default Nav;","import React from 'react';\r\n\r\nconst Footer = () => {\r\n    return <footer className=\"footer\">\r\n                IT-KAMASUTRA.COM\r\n            </footer>\r\n}\r\n\r\nexport default Footer;","import React from 'react';\r\n\r\nconst News = () => {\r\n    return (\r\n        <div>\r\n            News\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default News;","import React from 'react';\r\n\r\nconst Music = () => {\r\n    return (\r\n        <div>\r\n            Music\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Music;","import React from 'react';\r\n\r\nconst Settings = () => {\r\n    return (\r\n        <div>\r\n            Settings\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Settings;","import * as axios from \"axios\";\r\n\r\nconst instance = axios.create({\r\n    baseURL: `https://social-network.samuraijs.com/api/1.0/`,\r\n    withCredentials: true,\r\n    headers: {'API-KEY': \"deb5a1cf-eef7-4206-9237-48ed86537d51\"}\r\n});\r\n\r\nexport const usersAPI = {\r\n    getUsers(numberPage = 1, pageSize = 10) {\r\n        return instance.get(`users?page=${numberPage}&count=${pageSize}`)\r\n            .then((response) => {\r\n                return response.data\r\n            });\r\n    },\r\n    follow(userId) {\r\n        return instance.post(`follow/${userId}`)\r\n            .then((response) => {\r\n                return response.data\r\n            });\r\n    },\r\n    unfollow(userId) {\r\n        return instance.delete(`follow/${userId}`)\r\n            .then((response) => {\r\n                return response.data\r\n            });\r\n    },\r\n    getProfile(userId) {\r\n        return profileAPI.getProfile(userId);\r\n    }\r\n}\r\n\r\nexport const profileAPI = {\r\n    getProfile(userId) {\r\n        return instance.get(`profile/` + userId)\r\n            .then((response) => {\r\n                return response.data\r\n            });\r\n    },\r\n    getStatus(userId) {\r\n        return instance.get(`profile/status/`+ userId)\r\n            .then((response) => {\r\n                return response.data\r\n            });\r\n    },\r\n    updateStatus(status) {\r\n        return instance.put(`/profile/status`, {status: status});\r\n    },\r\n    savePhoto(photo) {\r\n        const formData = new FormData();\r\n        formData.append('image', photo);\r\n        return instance.put(`/profile/photo`, formData, {\r\n            headers: {\r\n                'Content-Type': 'multipart/form-data'\r\n            }\r\n        });\r\n    },\r\n    saveProfile(profile) {\r\n        return instance.put(`/profile`, profile);\r\n    },\r\n}\r\n\r\nexport const authAPI = {\r\n    me() {\r\n        return instance.get(`auth/me`)\r\n            .then((response) => {\r\n                return response.data\r\n            });\r\n    },\r\n    login(email, password, rememberMe, captcha) {\r\n        return instance.post(`/auth/login`, {email, password, rememberMe, captcha});\r\n    },\r\n    logout() {\r\n        return instance.delete(`/auth/login`);\r\n    },\r\n    getCaptchaUrl() {\r\n        return instance.get(`/security/get-captcha-url`)\r\n            .then((response) => {\r\n                return response.data\r\n            });\r\n    }\r\n}","import {usersAPI} from \"../api/api\";\r\n\r\nconst FOLLOW = 'FOLLOW';\r\nconst UNFOLLOW = 'UNFOLLOW';\r\nconst SET_USERS = 'SET_USERS';\r\nconst SET_CURRENT_PAGE = 'SET_CURRENT_PAGE';\r\nconst SET_TOTAL_USERS_COUNT = 'SET_TOTAL_USERS_COUNT';\r\nconst TOGGLE_IS_FETCHING = 'TOGGLE_IS_FETCHING';\r\nconst TOGGLE_FOLLOWING_IN_PROGRESS = 'TOGGLE_FOLLOWING_IN_PROGRESS';\r\n\r\n// Ициазилируем начальные данные\r\nconst initialState = {\r\n    users: [],\r\n    pageSize: 10,\r\n    totalUsersCount: 0,\r\n    portionSize: 10,\r\n    currentPage: 1,\r\n    isFetching: false,\r\n    isFollowingProgress: []\r\n}\r\n\r\nconst usersReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case FOLLOW: {\r\n            return {\r\n                ...state,\r\n                users: state.users.map(u => {\r\n                    if (u.id === action.userId) {\r\n                        return {...u, followed: true}\r\n                    }\r\n                    return u;\r\n                })\r\n            }\r\n        }\r\n        case UNFOLLOW: {\r\n            return {\r\n                ...state,\r\n                users: state.users.map(u => {\r\n                    if (u.id === action.userId) {\r\n                        return {...u, followed: false}\r\n                    }\r\n                    return u;\r\n                })\r\n            }\r\n        }\r\n        case SET_USERS: {\r\n            return {\r\n                ...state,\r\n                users: action.users\r\n            }\r\n        }\r\n        case SET_CURRENT_PAGE: {\r\n            return {\r\n                ...state,\r\n                currentPage: action.currentPage\r\n            }\r\n        }\r\n        case SET_TOTAL_USERS_COUNT: {\r\n            return {\r\n                ...state,\r\n                totalUsersCount: action.count\r\n            }\r\n        }\r\n        case TOGGLE_IS_FETCHING: {\r\n            return {\r\n                ...state,\r\n                isFetching: action.isFetching\r\n            }\r\n        }\r\n        case TOGGLE_FOLLOWING_IN_PROGRESS: {\r\n            return {\r\n                ...state,\r\n                isFollowingProgress: action.followingProgress\r\n                    ? [...state.isFollowingProgress, action.userId]\r\n                    : state.isFollowingProgress.filter(id => id !== action.userId)\r\n            }\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n\r\n}\r\n\r\n// Создаем ActionCreators\r\n\r\nexport let followSuccess = (userId) => {\r\n    return {type: FOLLOW, userId}\r\n}\r\nexport let unfollowSuccess = (userId) => {\r\n    return {type: UNFOLLOW, userId}\r\n}\r\nexport let setUsers = (users) => {\r\n    return {type: SET_USERS, users}\r\n}\r\nexport let setCurrentPage = (pageNumber) => {\r\n    return {type: SET_CURRENT_PAGE, currentPage: pageNumber}\r\n}\r\nexport let setTotalUsersCount = (totalCount) => {\r\n    return {type: SET_TOTAL_USERS_COUNT, count: totalCount}\r\n}\r\nexport let toggleIsFetching = (isFetching) => {\r\n    return {type: TOGGLE_IS_FETCHING, isFetching}\r\n}\r\nexport let toggleFollowingProgress = (followingProgress, userId) => {\r\n    return {type: TOGGLE_FOLLOWING_IN_PROGRESS, followingProgress, userId}\r\n}\r\n\r\n\r\n// Создаем ThunkCreators\r\n\r\nexport let requestUsers = (currentPage, pageSize) => {\r\n    return async (dispatch) => {\r\n        dispatch(toggleIsFetching(true));\r\n        let data = await usersAPI.getUsers(currentPage, pageSize)\r\n        dispatch(toggleIsFetching(false));\r\n        dispatch(setUsers(data.items));\r\n        dispatch(setTotalUsersCount(data.totalCount));\r\n\r\n    }\r\n};\r\nexport let unfollow = (userId) => {\r\n    return async (dispatch) => {\r\n        dispatch(toggleFollowingProgress(true, userId));\r\n        let data = await usersAPI.unfollow(userId)\r\n\r\n        if (data.resultCode === 0) {\r\n            dispatch(unfollowSuccess(userId));\r\n        }\r\n        dispatch(toggleFollowingProgress(false, userId));\r\n\r\n    }\r\n};\r\nexport let follow = (userId) => {\r\n    return async (dispatch) => {\r\n        dispatch(toggleFollowingProgress(true, userId));\r\n        let data = await usersAPI.follow(userId)\r\n\r\n        if (data.resultCode === 0) {\r\n            dispatch(followSuccess(userId));\r\n        }\r\n        dispatch(toggleFollowingProgress(false, userId));\r\n    }\r\n};\r\n\r\n\r\nexport default usersReducer;\r\n","import s from \"./Paginator.module.css\";\r\nimport cn from \"classnames\"\r\nimport React, {useState} from \"react\";\r\n\r\n\r\nconst Paginator = (props) => {\r\n\r\n    let pagesCount = Math.ceil(props.totalItemsCount / props.pageSize);\r\n    let pages = [];\r\n    for (let i = 1; i <= pagesCount; i++) {\r\n        pages.push(i);\r\n    }\r\n\r\n    let portionCount = Math.ceil(pagesCount / props.portionSize);\r\n    let [portionNumber, setPortionNumber] = useState(1);\r\n    let leftPortionPageNumber = (portionNumber - 1) * props.portionSize + 1;\r\n    let rightPortionPageNumber = portionNumber * props.portionSize;\r\n\r\n    return (\r\n        <div className={s.pagination}>\r\n\r\n            {portionNumber > 1 && <button onClick={() => setPortionNumber(portionNumber - 1)}>Prev</button>}\r\n\r\n            {pages.filter(p => p >= leftPortionPageNumber && p <= rightPortionPageNumber)\r\n                .map(p => {\r\n                return <span key={p}\r\n                             onClick={() => {props.onPageChanged(p)}}\r\n                             className={cn({[s.selectedPage]: props.currentPage === p}, s.paginationItem)}>{p}</span>\r\n            })}\r\n\r\n            {portionCount > portionNumber && <button onClick={() => setPortionNumber(portionNumber + 1)}>Next</button>}\r\n\r\n        </div>\r\n    )\r\n}\r\nexport default Paginator;","import React from 'react';\r\nimport s from './Users.module.css'\r\nimport unknownUser from './../../assets/images/unknown-user.png'\r\nimport {NavLink} from \"react-router-dom\";\r\nimport * as axios from 'axios';\r\nimport Paginator from \"../Common/Paginator/Paginator\";\r\n\r\nconst Users = (props) => {\r\n\r\n\r\n    return (\r\n        <div>\r\n            <Paginator currentPage={props.currentPage}\r\n                       totalItemsCount={props.totalUsersCount}\r\n                       pageSize={props.pageSize}\r\n                       onPageChanged={props.onPageChanged}\r\n                       portionSize={props.portionSize}/>\r\n            {\r\n                props.users.map(u => <div key={u.id}>\r\n                    <div className={s.wrapper}>\r\n                        <div className={s.userItem}>\r\n                            <div>\r\n                                <NavLink to={'/profile/' + u.id}>\r\n                                    <img className={s.avatar} src={u.photos.small ? u.photos.small : unknownUser}\r\n                                         alt=\"userPhoto\"/>\r\n                                </NavLink>\r\n                                {u.followed\r\n                                    ? <button disabled={props.isFollowingProgress.some(id => id === u.id)} onClick={() => {\r\n                                        props.unfollow(u.id)\r\n                                        // props.toggleFollowingProgress(true, u.id)\r\n                                        // usersAPI.unfollow(u.id)\r\n                                        //     .then((data) => {\r\n                                        //         if(data.resultCode === 0) {\r\n                                        //             props.unfollow(u.id)\r\n                                        //         }\r\n                                        //         props.toggleFollowingProgress(false, u.id)\r\n                                        //     })\r\n                                    }} className={s.followBtn}>Unfollow</button>\r\n                                    : <button disabled={props.isFollowingProgress.some(id => id === u.id)} onClick={() => {\r\n                                        props.follow(u.id)\r\n                                        // props.toggleFollowingProgress(true, u.id)\r\n                                        // usersAPI.follow(u.id)\r\n                                        //     .then((data) => {\r\n                                        //         if (data.resultCode === 0) {\r\n                                        //             props.follow(u.id)\r\n                                        //         }\r\n                                        //         props.toggleFollowingProgress(false, u.id)\r\n                                        //     })\r\n                                    }} className={s.followBtn}>Follow</button>}\r\n                            </div>\r\n                        </div>\r\n                        <div className={s.userInfo}>\r\n                            <div>\r\n                                <div>{u.name}</div>\r\n                                <div>{u.status}</div>\r\n                            </div>\r\n                            <div>\r\n                                <div>{'u.location.country'}</div>\r\n                                <div>{'u.location.city'}</div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>)\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default Users;","import preloader from \"../../../assets/images/preloader.svg\";\r\nimport React from \"react\";\r\n\r\n\r\nconst Preloader = (props) => {\r\n    return (\r\n        <div>\r\n            <img src={preloader}/>\r\n        </div>\r\n    )\r\n}\r\nexport default Preloader;","import {createSelector} from \"reselect\";\r\n\r\nconst getUsers = (state) => {\r\n    return state.usersPage.users\r\n};\r\n\r\nexport const getUsersSuperSelector = createSelector(getUsers, (users) => {\r\n    return users;\r\n});\r\n\r\nexport const getPageSize = (state) => {\r\n    return state.usersPage.pageSize\r\n};\r\n\r\nexport const getTotalUsersCount = (state) => {\r\n    return state.usersPage.totalUsersCount\r\n};\r\n\r\nexport const getCurrentPage = (state) => {\r\n    return state.usersPage.currentPage\r\n};\r\n\r\nexport const getIsFetching = (state) => {\r\n    return state.usersPage.isFetching\r\n};\r\n\r\nexport const getIsFollowingProgress = (state) => {\r\n    return state.usersPage.isFollowingProgress\r\n};\r\n\r\n","import React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {\r\n    follow,\r\n    requestUsers,\r\n    setCurrentPage,\r\n    setTotalUsersCount,\r\n    unfollow,\r\n} from '../../redux/users-reducer';\r\nimport * as axios from 'axios';\r\nimport Users from './Users';\r\nimport Preloader from \"../Common/Preloader/Preloader\";\r\nimport {\r\n    getCurrentPage,\r\n    getIsFetching,\r\n    getIsFollowingProgress,\r\n    getPageSize,\r\n    getTotalUsersCount,\r\n    getUsersSuperSelector\r\n} from \"../../redux/users-selectors\";\r\n\r\nclass UsersAPIComponent extends React.Component {\r\n\r\n    componentDidMount() {\r\n        this.props.requestUsers(this.props.currentPage, this.props.pageSize);\r\n    }\r\n\r\n    onPageChanged = (pageNumber) => {\r\n        this.props.setCurrentPage(pageNumber);\r\n        this.props.requestUsers(pageNumber, this.props.pageSize);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                {this.props.isFetching ? <Preloader/> : null}\r\n                <Users totalUsersCount={this.props.totalUsersCount}\r\n                       pageSize={this.props.pageSize}\r\n                       currentPage={this.props.currentPage}\r\n                       onPageChanged={this.onPageChanged}\r\n                       users={this.props.users}\r\n                       follow={this.props.follow}\r\n                       unfollow={this.props.unfollow}\r\n                       isFollowingProgress={this.props.isFollowingProgress}\r\n                       portionSize={this.props.portionSize}/>\r\n\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        users: getUsersSuperSelector(state),\r\n        pageSize: getPageSize(state),\r\n        totalUsersCount: getTotalUsersCount(state),\r\n        currentPage: getCurrentPage(state),\r\n        isFetching: getIsFetching(state),\r\n        isFollowingProgress: getIsFollowingProgress(state),\r\n        portionSize: state.usersPage.portionSize\r\n    }\r\n}\r\n\r\n// let mapDispatchToProps = (dispatch) => {\r\n//     return {\r\n//         follow: (userId) => {\r\n//             dispatch(followAC(userId));\r\n//         },\r\n//         unfollow: (userId) => {\r\n//             dispatch(unfollowAC(userId));\r\n//         },\r\n//         setUsers: (users) => {\r\n//             dispatch(setUsersAC(users));\r\n//         },\r\n//         setCurrentPage: (pageNumber) => {\r\n//             dispatch(setCurrentPageAC(pageNumber))\r\n//         },\r\n//         setTotalUsersCount: (totalCount) => {\r\n//             dispatch(setTotalUsersCountAC(totalCount))\r\n//         },\r\n//         toggleIsFetching: (isFetching) => {\r\n//             dispatch(toggleIsFetchingAC(isFetching))\r\n//         }\r\n//     }\r\n// }\r\n\r\nlet UsersContainer = connect(mapStateToProps, {\r\n    setCurrentPage, setTotalUsersCount,\r\n    requestUsers, follow, unfollow})(UsersAPIComponent)\r\n\r\nexport default UsersContainer;","import React, {useEffect, useState} from 'react';\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n\r\n    const [editMode, setEditMode] = useState(false);\r\n    const [status, setStatus] = useState(props.userStatus);\r\n\r\n    // componentDidUpdate(prevProps, prevState) {\r\n    //     if(prevProps.userStatus !== this.props.userStatus) {\r\n    //         this.setState({\r\n    //             status: this.props.userStatus\r\n    //         });\r\n    //     }\r\n    // }\r\n\r\n    useEffect( () => {\r\n        setStatus(props.userStatus);\r\n    },[props.userStatus])\r\n\r\n    const activateEditMode = () => {\r\n        setEditMode(true);\r\n    }\r\n\r\n    const deactivateEditMode = () => {\r\n        setEditMode(false);\r\n        props.updateStatus(status);\r\n    }\r\n\r\n    const onStatusChange = (e) => {\r\n        setStatus(e.currentTarget.value);\r\n    }\r\n\r\n\r\n    return (\r\n        <div>\r\n            {!editMode &&\r\n            <div>\r\n                <b>Status: </b><span onDoubleClick={activateEditMode}>{status || '-----'}</span>\r\n            </div>\r\n            }\r\n            {editMode &&\r\n            <div>\r\n                <b>Status: </b><input onChange={onStatusChange} autoFocus={true} onBlur={deactivateEditMode}\r\n                       value={status} type=\"text\"/>\r\n            </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProfileStatusWithHooks;","import s from \"./ProfileInfo.module.css\";\r\nimport ProfileStatusWithHooks from \"./ProfileStatusWithHooks\";\r\nimport React from \"react\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\n\r\nconst ProfileDataForm = (props) => {\r\n    return (\r\n        <form className={s.userInfo} onSubmit={props.handleSubmit}>\r\n            {props.isOwner && <button>Save</button>}\r\n            {props.error && <div><span className={s.error}>{props.error}</span></div>}\r\n            <div>\r\n                <div>\r\n                    <b>Name:</b>\r\n                    <div>\r\n                        <Field placeholder={'Name'} name={'fullName'} component={'input'}/>\r\n                    </div>\r\n                </div>\r\n                <div>\r\n                    <ProfileStatusWithHooks userStatus={props.userStatus}\r\n                                            updateStatus={props.updateStatus}/>\r\n                </div>\r\n                <div>\r\n                    <b>About me:</b>\r\n                    <div>\r\n                        <Field placeholder={'About me'} name={'aboutMe'} component={'textarea'}/>\r\n                    </div>\r\n                </div>\r\n\r\n                <div>\r\n                    <b>Looking for a job:</b>\r\n                    <div>\r\n                        <Field type={'checkbox'} name={'lookingForAJob'} component={'input'}/>\r\n                    </div>\r\n                </div>\r\n                <div>\r\n                    <b>My professional skills:</b>\r\n                    <div>\r\n                        <Field placeholder={'My professional skills'} name={'lookingForAJobDescription'} component={'textarea'}/>\r\n                    </div>\r\n                </div>\r\n                <div><b>Contacts:</b> {Object.keys(props.profile.contacts).map(key => {\r\n                    return <div key={key}>\r\n                        <b>{key}:\r\n                            <div>\r\n                                <Field placeholder={key} name={'contacts.' + key} component={'input'}/>\r\n                            </div>\r\n                        </b>\r\n                    </div>\r\n                })}</div>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst ProfileDataReduxForm = reduxForm({form: 'profileInfo'})(ProfileDataForm);\r\n\r\nexport default ProfileDataReduxForm;","import React, {useState} from 'react';\r\nimport s from './ProfileInfo.module.css';\r\nimport Preloader from \"../../Common/Preloader/Preloader\";\r\nimport ProfileStatusWithHooks from \"./ProfileStatusWithHooks\";\r\nimport unknownUser from './../../../assets/images/unknown-user.png';\r\nimport ProfileDataReduxForm from \"./ProfileDataForm\";\r\n\r\nconst ProfileInfo = (props) => {\r\n    let [editMode, setEditMode] = useState(false);\r\n\r\n    if(!props.profile) {\r\n        return <Preloader/>\r\n    }\r\n\r\n    const activateEditMode = () => {\r\n        setEditMode(true);\r\n    }\r\n\r\n    let onSubmit = (formData) => {\r\n        props.saveProfile(formData)\r\n            .then( () => {\r\n                setEditMode(false);\r\n            });\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div>\r\n                <img className={s.backgroundPicture} src=\"https://cdn.tribloo.com/storage/app/media/_mediathumbs/tribloo-destinations-124-cropped-images-dive-norway-8-10-978-298-1526660074-9458e322565a645c2d96bdd300eba8b1.jpg\"/>\r\n            </div>\r\n            <div className={s.userInfoWrapper}>\r\n                <div className={s.avatarWrapper}>\r\n                    <img className={s.avatar} src={props.profile.photos.large || unknownUser}/>\r\n                    {props.isOwner && <input onChange={props.onSavePhoto} type=\"file\"/>}\r\n                </div>\r\n                {editMode ? <ProfileDataReduxForm initialValues={props.profile} onSubmit={onSubmit}{...props}/> : <ProfileData {...props} activateEditMode={activateEditMode}/>}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst ProfileData = (props) => {\r\n    return (\r\n        <div className={s.userInfo}>\r\n            {props.isOwner && <button onClick={props.activateEditMode}>Edit</button>}\r\n            <div>\r\n                <div><b>Name:</b> {props.profile.fullName}</div>\r\n                <div>\r\n                    <ProfileStatusWithHooks userStatus={props.userStatus}\r\n                                            updateStatus={props.updateStatus}/>\r\n                </div>\r\n                <div>\r\n                    <b>About me:</b> {props.profile.aboutMe}\r\n                </div>\r\n                <div>\r\n                    <b>Looking for a job:</b> {props.profile.lookingForAJob ? 'Yes' : 'No'}\r\n                </div>\r\n                <div>\r\n                    <b>My professional skills:</b> {props.profile.lookingForAJobDescription}\r\n                </div>\r\n                <div>\r\n                    <b>Contacts:</b> {Object.keys(props.profile.contacts).map(key => {\r\n                    return <Contact key={key} contactTitle={key} contactValue={props.profile.contacts[key]}/>\r\n                })}</div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport const Contact = ({contactTitle, contactValue}) => {\r\n    return <div className={s.socialLink}><b>{contactTitle}: </b>{contactValue}</div>\r\n}\r\n\r\nexport default ProfileInfo; ","import {profileAPI, usersAPI} from \"../api/api\";\r\nimport {stopSubmit} from \"redux-form\";\r\n\r\nconst ADD_NEW_POST = 'ADD-NEW-POST';\r\nconst SET_USER_PROFILE = 'SET_USER_PROFILE';\r\nconst SET_USER_STATUS = 'SET_USER_STATUS';\r\nconst DELETE_POST = 'DELETE_POST';\r\nconst SAVE_PHOTO_SUCCUSSED = 'SAVE_PHOTO_SUCCUSSED';\r\n\r\nconst initialState = {\r\n    postsData: [\r\n        {id: 1, message: \"Hey, how are you?\", likesCounts: 15},\r\n        {id: 2, message: \"It is my first post\", likesCounts: 20}\r\n    ],\r\n    profile: null,\r\n    userStatus: ''\r\n}\r\n\r\nconst profileReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case ADD_NEW_POST: {\r\n            let newPost = {\r\n                id: 3,\r\n                message: action.postText,\r\n                likesCounts: 0\r\n            };\r\n            return {\r\n                ...state,\r\n                newPostText: '',\r\n                postsData: [...state.postsData, newPost],\r\n\r\n            };\r\n\r\n        }\r\n        case SET_USER_PROFILE: {\r\n            return {\r\n                ...state,\r\n                profile: action.profile\r\n            };\r\n        }\r\n        case SET_USER_STATUS: {\r\n            return {\r\n                ...state,\r\n                userStatus: action.status\r\n            };\r\n        }\r\n        case DELETE_POST: {\r\n            return {\r\n                ...state,\r\n                postsData: [...state.postsData.filter(post => post.id !== action.postId)]\r\n            }\r\n        }\r\n        case SAVE_PHOTO_SUCCUSSED: {\r\n            return {\r\n                ...state,\r\n                profile: {...state.profile, photos: action.photos }\r\n            }\r\n        }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n\r\n}\r\n\r\n// Создаем ActionCreators\r\n\r\nexport let newPostsActionCreator = (postText) => {\r\n    return {type: ADD_NEW_POST, postText}\r\n}\r\nexport let setUserProfile = (profile) => {\r\n    return {type: SET_USER_PROFILE, profile}\r\n}\r\n\r\nexport let setUserStatus = (status) => {\r\n    return {type: SET_USER_STATUS, status}\r\n}\r\n\r\nexport let deletePost = (postId) => {\r\n    return {type: DELETE_POST, postId}\r\n}\r\n\r\nexport let savePhotoSuccessed = (photos) => {\r\n    return {type: SAVE_PHOTO_SUCCUSSED, photos}\r\n}\r\n\r\n// Создаем ThunkCreators\r\n\r\nexport let getProfile = (userId) => {\r\n    return async (dispatch) => {\r\n        let data = await usersAPI.getProfile(userId)\r\n        dispatch(setUserProfile(data));\r\n    }\r\n}\r\n\r\nexport let getUserStatus = (userId) => {\r\n    return async (dispatch) => {\r\n        let status = await profileAPI.getStatus(userId)\r\n        dispatch(setUserStatus(status));\r\n    }\r\n}\r\n\r\nexport let updateUserStatus = (status) => {\r\n    return async (dispatch) => {\r\n        let response = await profileAPI.updateStatus(status)\r\n        if (response.data.resultCode === 0) {\r\n            dispatch(setUserStatus(status));\r\n        }\r\n    }\r\n}\r\n\r\nexport let updateProfilePhoto = (file) => {\r\n    return async (dispatch) => {\r\n        let response = await profileAPI.savePhoto(file);\r\n        if (response.data.resultCode === 0) {\r\n             dispatch(savePhotoSuccessed(response.data.data.photos));\r\n        }\r\n    }\r\n}\r\n\r\nexport let saveProfile = (profile) => {\r\n    return async (dispatch, getState) => {\r\n        const userId = getState().auth.userId;\r\n        let response = await profileAPI.saveProfile(profile);\r\n        if (response.data.resultCode === 0) {\r\n            dispatch(getProfile(userId));\r\n        } else {\r\n            let message = response.data.messages ? response.data.messages[0] : 'Some error';\r\n            dispatch(stopSubmit('profileInfo', {_error: message}));\r\n            return Promise.reject(message);\r\n        }\r\n    }\r\n}\r\n\r\nexport default profileReducer;\r\n","import React from 'react';\r\nimport s from './Post.module.css';\r\n\r\n\r\nconst Post = (props) => {\r\n    return (\r\n        <div className={s.item}>\r\n            <img src=\"https://avatars.mds.yandex.net/get-pdb/1352825/a5f8fbd7-515e-49f8-81d6-be55a2daac92/s600\"/>\r\n            {props.message}\r\n            <div>\r\n                <span>like</span> {props.likesCounts}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Post;","import React from 'react';\r\nimport s from './MyPosts.module.css';\r\nimport Post from \"./Post/Post\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {maxLengthCreator, required} from \"../../../redux/helpers/validators\";\r\nimport {Elem} from \"../../Common/FormControls/FormControls\";\r\n\r\nconst maxLength = maxLengthCreator(30)\r\n\r\nlet MyPostsForm = (props) => {\r\n\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field name={'post'} component={Elem}\r\n                       validate={[required, maxLength]}\r\n                       placeholder={'Post message...'}\r\n                       typeField={'textarea'}/>\r\n            </div>\r\n            <div>\r\n                <button className={s.newPostBtn}>Add post</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nlet MyPostsReduxForm = reduxForm({form: 'posts'})(MyPostsForm)\r\n\r\nconst MyPosts = (props) => {\r\n    let postsElements = props.postsData.map(p => <Post key={p.id} message={p.message} likesCounts={p.likesCounts}/>);\r\n\r\n    let addNewPost = (values) => {\r\n        props.newPosts(values.post);\r\n    }\r\n\r\n    return (\r\n        <div className={s.postsBlock}>\r\n            <div>\r\n                <h3>My posts...</h3>\r\n                <MyPostsReduxForm onSubmit={addNewPost}/>\r\n                <div className={s.newPosts}>\r\n                    New posts\r\n                </div>\r\n                <div>\r\n                    { postsElements }\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default MyPosts;","import React from 'react';\r\nimport {newPostsActionCreator} from \"../../../redux/profile-reducer\";\r\nimport MyPosts from \"./MyPosts\";\r\nimport {connect} from \"react-redux\";\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        postsData: state.profilePage.postsData,\r\n    }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        newPosts: (postText) => {\r\n            dispatch(newPostsActionCreator(postText));\r\n        }\r\n    }\r\n}\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts)\r\n\r\nexport default MyPostsContainer;","import React from 'react';\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\nimport s from './Profile.module.css';\r\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\r\n\r\nconst Profile = (props) => {\r\n    return (\r\n        <div>\r\n            <ProfileInfo profile={props.profile}\r\n                         userStatus={props.userStatus}\r\n                         updateStatus={props.updateStatus}\r\n                         isOwner={props.isOwner}\r\n                         saveProfile={props.saveProfile}\r\n                         onSavePhoto={props.onSavePhoto}/>\r\n            <MyPostsContainer/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Profile;","import React from 'react';\r\nimport Profile from \"./Profile\";\r\nimport * as axios from \"axios\";\r\nimport s from './Profile.module.css';\r\nimport {\r\n    getProfile,\r\n    getUserStatus,\r\n    saveProfile,\r\n    updateProfilePhoto,\r\n    updateUserStatus\r\n} from \"../../redux/profile-reducer\";\r\nimport {connect} from \"react-redux\";\r\nimport {withRouter} from \"react-router-dom\";\r\nimport {withAuthRedirectComponent} from \"../../hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\nclass ProfileContainer extends React.Component {\r\n\r\n    onSavePhoto = (e) => {\r\n        if(e.target.files.length > 0) {\r\n            this.props.updateProfilePhoto(e.target.files[0]);\r\n        }\r\n    }\r\n\r\n    refreshProfile() {\r\n        let userId = this.props.match.params.userId;\r\n        if(!userId) {\r\n            userId = this.props.authorizedUserId;\r\n            if(!userId) {\r\n                this.props.history.push('/login');\r\n            }\r\n        }\r\n        this.props.getProfile(userId);\r\n        this.props.getUserStatus(userId);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.refreshProfile()\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if(this.props.match.params.userId !== prevProps.match.params.userId) {\r\n            this.refreshProfile();\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Profile {...this.props} profile={this.props.profile}\r\n                         userStatus={this.props.userStatus}\r\n                         updateStatus={this.props.updateUserStatus}\r\n                         isOwner={this.props.match.params.userId === undefined}\r\n                         onSavePhoto={this.onSavePhoto}\r\n                         saveProfile={this.props.saveProfile}/>\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        profile: state.profilePage.profile,\r\n        userStatus: state.profilePage.userStatus,\r\n        authorizedUserId: state.auth.userId\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {getProfile, getUserStatus, updateUserStatus, updateProfilePhoto, saveProfile}),\r\n    withRouter,\r\n    // withAuthRedirectComponent\r\n)(ProfileContainer);","import React from 'react';\r\nimport s from './Header.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst Header = (props) => {\r\n    return (\r\n        <header className={s.header}>\r\n            <div className={s.loginBlock}>\r\n                {props.isAuth\r\n                    ? <div>{props.login} - <button onClick={props.logout}>Logout</button></div>\r\n                    : <NavLink to={'/login'}>Login</NavLink>}\r\n            </div>\r\n            <img src=\"https://static.rfstat.com/renderforest/images/v2/logo-homepage/flat_3.png\"/>\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default Header;","import {authAPI} from \"../api/api\";\r\nimport {stopSubmit} from \"redux-form\";\r\n\r\nconst SET_AUTH_USER_DATA = 'SET_AUTH_USER_DATA';\r\nconst SET_CAPTCHA = 'SET_CAPTCHA';\r\n\r\nconst initialState = {\r\n    userId: null,\r\n    login: null,\r\n    email: null,\r\n    isAuth: false,\r\n    captchaUrl: null\r\n}\r\n\r\nconst authReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SET_AUTH_USER_DATA: {\r\n            return {\r\n                ...state,\r\n                ...action.data\r\n            }\r\n        }\r\n        case SET_CAPTCHA: {\r\n            return {\r\n                ...state,\r\n                ...action.data\r\n            }\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n\r\n}\r\n\r\n// Создаем ActionCreators\r\n\r\nexport let setAuthUserData = (userId, login, email, isAuth) => {\r\n    return {type: SET_AUTH_USER_DATA, data: {userId, login, email, isAuth}}\r\n}\r\nexport let setCaptcha = (captchaUrl) => {\r\n    return {type: SET_AUTH_USER_DATA, data: {captchaUrl}}\r\n}\r\n\r\n// Создаем ThunkCreators\r\n\r\nexport let getAuthUserData = () => {\r\n    return async (dispatch) => {\r\n        let data = await authAPI.me()\r\n\r\n        if (data.resultCode === 0) {\r\n            let {id, login, email} = data.data;\r\n            dispatch(setAuthUserData(id, login, email, true));\r\n        }\r\n    }\r\n}\r\n\r\nexport let login = (email, password, rememberMe, captcha) => {\r\n    return async (dispatch) => {\r\n        let response = await authAPI.login(email, password, rememberMe, captcha)\r\n\r\n        if (response.data.resultCode === 0) {\r\n            dispatch(getAuthUserData())\r\n        } else if (response.data.resultCode === 1) {\r\n            let message = response.data.messages ? response.data.messages[0] : 'Some error';\r\n            dispatch(stopSubmit('login', {_error: message}));\r\n        } else if (response.data.resultCode === 10) {\r\n            let response = await authAPI.getCaptchaUrl()\r\n            dispatch(setCaptcha(response.url));\r\n        } else {\r\n            let message = response.data.messages ? response.data.messages[0] : 'Some error';\r\n            dispatch(stopSubmit('login', {_error: message}));\r\n        }\r\n\r\n    }\r\n}\r\n\r\nexport let logout = () => {\r\n    return async (dispatch) => {\r\n        let response = await authAPI.logout()\r\n\r\n        if (response.data.resultCode === 0) {\r\n            dispatch(setAuthUserData(null, null, null, false));\r\n        }\r\n    }\r\n}\r\n\r\nexport default authReducer;\r\n","import React from 'react';\r\nimport s from './Header.module.css';\r\nimport Header from \"./Header\";\r\nimport {logout} from \"../../redux/auth-reducer\";\r\nimport {connect} from \"react-redux\";\r\n\r\nclass HeaderContainer extends React.Component {\r\n    render() {\r\n        return (\r\n            <Header {...this.props}/>\r\n        )\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        id: state.auth.id,\r\n        login: state.auth.login,\r\n        email: state.auth.email,\r\n        isAuth: state.auth.isAuth\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, {logout})(HeaderContainer);","import React from \"react\";\r\nimport {Field, reduxForm} from 'redux-form'\r\nimport {Elem} from \"../Common/FormControls/FormControls\";\r\nimport {required} from \"../../redux/helpers/validators\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport s from \"./../Common/FormControls/FormControls.module.css\"\r\n\r\n\r\nconst LoginForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field placeholder={'Email'} name={'email'} component={Elem} validate={[required]}/>\r\n            </div>\r\n            <div>\r\n                <Field placeholder={'Password'} type={'password'} name={'password'} component={Elem} validate={[required]}/>\r\n            </div>\r\n            <div>\r\n                <Field type={'checkbox'} name={'rememberMe'} component='input'/>Remember me\r\n            </div>\r\n            {props.error && <div className={s.borderError + ' ' + s.error}>{props.error}</div>}\r\n            {props.captchaUrl\r\n                && <div>\r\n                    <div>\r\n                        <img src={props.captchaUrl}/>\r\n                    </div>\r\n                    <Field name={'captcha'} component={Elem} type=\"text\" placeholder={'Captcha...'}/>\r\n                </div>}\r\n            <div>\r\n                <button>Login</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst LoginReduxForm = reduxForm({form: 'login'})(LoginForm);\r\n\r\nconst Login = (props) => {\r\n    let onSubmit = (formData) => {\r\n        props.login(formData.email, formData.password, formData.rememberMe, formData.captcha);\r\n    }\r\n\r\n    if(props.isAuth) {\r\n        return <Redirect to={'/profile'}/>\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h1>LOGIN</h1>\r\n            <LoginReduxForm onSubmit={onSubmit} captchaUrl={props.captchaUrl}/>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default Login;","import React from \"react\";\r\nimport Login from \"./Login\";\r\nimport {connect} from \"react-redux\";\r\nimport {login} from \"../../redux/auth-reducer\";\r\n\r\nclass LoginContainer extends React.Component {\r\n\r\n    render() {\r\n       return <Login login={this.props.login}\r\n                     isAuth={this.props.isAuth}\r\n                     captchaUrl={this.props.captchaUrl}/>\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        isAuth: state.auth.isAuth,\r\n        captchaUrl: state.auth.captchaUrl\r\n    }\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps, {login})(LoginContainer);","import {getAuthUserData} from \"./auth-reducer\";\r\n\r\nconst SET_INITIALIZED = 'SET_INITIALIZED';\r\n\r\nconst initialState = {\r\n    initialized: false\r\n}\r\n\r\nconst appReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SET_INITIALIZED: {\r\n            return {\r\n                ...state,\r\n                initialized: true\r\n            }\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n\r\n}\r\n\r\n// Создаем ActionCreators\r\n\r\nexport let setInitialized = () => {\r\n    return {type: SET_INITIALIZED}\r\n}\r\n// Создаем ThunkCreators\r\n\r\nexport let initializeApp = () => {\r\n    return (dispatch) => {\r\n        let promise = dispatch(getAuthUserData());\r\n        Promise.all([promise])\r\n            .then(() => {\r\n                dispatch(setInitialized());\r\n            }\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default appReducer;\r\n","import React, {Suspense} from \"react\";\r\n\r\nconst withSuspense = (Component) => {\r\n    return (props) => {\r\n       return (\r\n           <Suspense fallback={\"Загрузка...\"}>\r\n               <Component {...props}/>\r\n           </Suspense>\r\n        )\r\n    };\r\n}\r\n\r\nexport  default  withSuspense;","import React, {Suspense} from 'react';\nimport Nav from './components/Nav/Nav';\nimport Footer from './components/Footer/Footer';\nimport {Route, withRouter} from \"react-router-dom\";\nimport News from \"./components/News/News\";\nimport s from './App.css';\nimport Music from \"./components/Music/Music\";\nimport Settings from \"./components/Settings/Settings\";\nimport UsersContainer from \"./components/Users/UsersContainer\";\nimport ProfileContainer from \"./components/Profile/ProfileContainer\";\nimport HeaderContainer from \"./components/Header/HeaderContainer\";\nimport LoginContainer from \"./components/Login/LoginContainer\";\nimport {connect} from \"react-redux\";\nimport {initializeApp} from \"./redux/app-reducer\";\nimport Preloader from \"./components/Common/Preloader/Preloader\";\nimport {compose} from \"redux\";\nimport withSuspense from \"./hoc/withSuspense\";\n\n// import DialogsContainer from \"./components/Dialogs/DialogsContainer\";\nconst DialogsContainer = React.lazy(() => import(\"./components/Dialogs/DialogsContainer\"));\n\n\nclass App extends React.Component {\n\n    componentDidMount() {\n        this.props.initializeApp();\n    }\n\n    render() {\n        return (\n            !this.props.initialized\n                ? <Preloader/>\n                : <div className=\"app-wrapper\">\n                    <HeaderContainer/>\n                    <Nav/>\n                    <div className=\"app-wrapper-content\">\n                        <Route path='/profile/:userId?' render={() => <ProfileContainer/>}/>\n                        <Route path='/dialogs' render={withSuspense(DialogsContainer)}/>\n                        <Route path='/users' render={() => <UsersContainer/>}/>\n                        <Route path='/news' render={() => <News/>}/>\n                        <Route path='/music' render={() => <Music/>}/>\n                        <Route path='/settings' render={() => <Settings/>}/>\n                        <Route path='/login' render={() => <LoginContainer/>}/>\n                    </div>\n                    <Footer/>\n                </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => ({\n    initialized: state.app.initialized\n})\n\n\nexport default compose(\n    withRouter,\n    connect(mapStateToProps, {initializeApp}))(App);\n","const initialState = {\r\n    friends: [\r\n        {id: 1, name: 'Dmitriy', img: 'https://html5css.ru/w3images/avatar2.png'},\r\n        {id: 2, name: 'Viacheslav', img: 'https://www.w3schools.com/howto/img_avatar.png'},\r\n        {id: 3, name: 'Anjela', img: 'https://html5css.ru/howto/img_avatar2.png'}\r\n    ]\r\n}\r\n\r\n\r\nconst sidebarReducer = (state = initialState, action) => {\r\n    let stateCopy = {...state};\r\n    return stateCopy;\r\n}\r\nexport default sidebarReducer;","import {applyMiddleware, combineReducers, compose, createStore} from \"redux\";\r\nimport profileReducer from \"./profile-reducer\";\r\nimport dialogsReducer from \"./dialogs-reducer\";\r\nimport sidebarReducer from \"./sidebar-reducer\";\r\nimport usersReducer from \"./users-reducer\";\r\nimport authReducer from \"./auth-reducer\";\r\nimport thunkMiddleWare from \"redux-thunk\";\r\nimport { reducer as formReducer } from 'redux-form'\r\nimport appReducer from \"./app-reducer\";\r\n\r\nlet reducers = combineReducers( {\r\n    profilePage: profileReducer,\r\n    messagesPage: dialogsReducer,\r\n    sidebar: sidebarReducer,\r\n    usersPage: usersReducer,\r\n    auth: authReducer,\r\n    form: formReducer,\r\n    app: appReducer\r\n});\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nlet store = createStore(reducers, composeEnhancers(compose(applyMiddleware(thunkMiddleWare))));\r\n\r\n// let store = createStore(reducers, applyMiddleware(thunkMiddleWare));\r\n\r\nexport default store;","import './index.css';\nimport ReactDOM from \"react-dom\";\nimport React from \"react\";\nimport App from \"./App\";\nimport store from \"./redux/redux-store\";\nimport {HashRouter} from \"react-router-dom\";\nimport {Provider} from \"react-redux\";\n// import {Provider} from \"./StoreContext\"\n\n\nReactDOM.render(\n    <React.StrictMode>\n        <HashRouter>\n            <Provider store={store}>\n                <App/>\n            </Provider>\n        </HashRouter>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n\n\n\n\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"error\":\"FormControls_error__MLktG\",\"borderError\":\"FormControls_borderError__163eL\",\"textArea\":\"FormControls_textArea__3wPh_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Users_wrapper__1JrVz\",\"userItem\":\"Users_userItem__tM6Vy\",\"userInfo\":\"Users_userInfo__2ArFj\",\"followBtn\":\"Users_followBtn__Lp04J\",\"avatar\":\"Users_avatar__1pr-c\"};","export const required = (value) => {\r\n    if(value) return undefined\r\n    return 'Required zone'\r\n}\r\n\r\nexport const maxLengthCreator = (maxLength) => (value) => {\r\n    if(value.length > maxLength) return `Max length is ${maxLength} symbols`\r\n    return undefined\r\n}","import React from \"react\";\r\nimport s from \"./FormControls.module.css\"\r\n\r\nexport const Elem = ({input, meta, ...props}) => {\r\n    return (\r\n        <div>\r\n            <div>\r\n                {props.typeField === 'textarea'\r\n                    ? <textarea className={ (meta.touched && meta.error && s.borderError) + \" \" + s.textArea} {...input} {...props}/>\r\n                    : <input className={meta.touched && meta.error && s.borderError} {...input} {...props}/>}\r\n            </div>\r\n            <div>\r\n                {meta.touched && meta.error && <span className={s.error}>{meta.error}</span>}\r\n            </div>\r\n        </div>\r\n    )\r\n}","module.exports = __webpack_public_path__ + \"static/media/unknown-user.1e976c46.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__3BgwV\",\"loginBlock\":\"Header_loginBlock__1nvH8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"pagination\":\"Paginator_pagination__3oc9N\",\"paginationItem\":\"Paginator_paginationItem__3tGrW\",\"selectedPage\":\"Paginator_selectedPage__26KLL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postsBlock\":\"MyPosts_postsBlock__1M888\",\"newPosts\":\"MyPosts_newPosts__VfZE5\",\"newPostBtn\":\"MyPosts_newPostBtn__3rJ9f\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"someFriends\":\"SideBarFriends_someFriends__24r2x\",\"userAva\":\"SideBarFriends_userAva__b-nQq\"};"],"sourceRoot":""}